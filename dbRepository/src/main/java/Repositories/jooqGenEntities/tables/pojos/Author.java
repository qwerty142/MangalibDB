/*
 * This file is generated by jOOQ.
 */
package Repositories.jooqGenEntities.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Author implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long authorId;
    private String authorName;

    public Author() {}

    public Author(Author value) {
        this.authorId = value.authorId;
        this.authorName = value.authorName;
    }

    @ConstructorProperties({ "authorId", "authorName" })
    public Author(
        @Nullable Long authorId,
        @Nullable String authorName
    ) {
        this.authorId = authorId;
        this.authorName = authorName;
    }

    /**
     * Getter for <code>public.author.author_id</code>.
     */
    @Nullable
    public Long getAuthorId() {
        return this.authorId;
    }

    /**
     * Setter for <code>public.author.author_id</code>.
     */
    public void setAuthorId(@Nullable Long authorId) {
        this.authorId = authorId;
    }

    /**
     * Getter for <code>public.author.author_name</code>.
     */
    @Nullable
    public String getAuthorName() {
        return this.authorName;
    }

    /**
     * Setter for <code>public.author.author_name</code>.
     */
    public void setAuthorName(@Nullable String authorName) {
        this.authorName = authorName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Author other = (Author) obj;
        if (this.authorId == null) {
            if (other.authorId != null)
                return false;
        }
        else if (!this.authorId.equals(other.authorId))
            return false;
        if (this.authorName == null) {
            if (other.authorName != null)
                return false;
        }
        else if (!this.authorName.equals(other.authorName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.authorId == null) ? 0 : this.authorId.hashCode());
        result = prime * result + ((this.authorName == null) ? 0 : this.authorName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Author (");

        sb.append(authorId);
        sb.append(", ").append(authorName);

        sb.append(")");
        return sb.toString();
    }
}
