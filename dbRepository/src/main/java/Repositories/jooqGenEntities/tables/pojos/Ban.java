/*
 * This file is generated by jOOQ.
 */
package Repositories.jooqGenEntities.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ban implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long banId;
    private String banEnum;
    private Long userId;

    public Ban() {}

    public Ban(Ban value) {
        this.banId = value.banId;
        this.banEnum = value.banEnum;
        this.userId = value.userId;
    }

    @ConstructorProperties({ "banId", "banEnum", "userId" })
    public Ban(
        @Nullable Long banId,
        @Nullable String banEnum,
        @Nullable Long userId
    ) {
        this.banId = banId;
        this.banEnum = banEnum;
        this.userId = userId;
    }

    /**
     * Getter for <code>public.ban.ban_id</code>.
     */
    @Nullable
    public Long getBanId() {
        return this.banId;
    }

    /**
     * Setter for <code>public.ban.ban_id</code>.
     */
    public void setBanId(@Nullable Long banId) {
        this.banId = banId;
    }

    /**
     * Getter for <code>public.ban.ban_enum</code>.
     */
    @Size(max = 255)
    @Nullable
    public String getBanEnum() {
        return this.banEnum;
    }

    /**
     * Setter for <code>public.ban.ban_enum</code>.
     */
    public void setBanEnum(@Nullable String banEnum) {
        this.banEnum = banEnum;
    }

    /**
     * Getter for <code>public.ban.user_id</code>.
     */
    @Nullable
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.ban.user_id</code>.
     */
    public void setUserId(@Nullable Long userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Ban other = (Ban) obj;
        if (this.banId == null) {
            if (other.banId != null)
                return false;
        }
        else if (!this.banId.equals(other.banId))
            return false;
        if (this.banEnum == null) {
            if (other.banEnum != null)
                return false;
        }
        else if (!this.banEnum.equals(other.banEnum))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.banId == null) ? 0 : this.banId.hashCode());
        result = prime * result + ((this.banEnum == null) ? 0 : this.banEnum.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Ban (");

        sb.append(banId);
        sb.append(", ").append(banEnum);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
