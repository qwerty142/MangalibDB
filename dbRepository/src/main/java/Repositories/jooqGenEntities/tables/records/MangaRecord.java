/*
 * This file is generated by jOOQ.
 */
package Repositories.jooqGenEntities.tables.records;


import Repositories.jooqGenEntities.tables.Manga;

import java.beans.ConstructorProperties;
import java.math.BigDecimal;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MangaRecord extends UpdatableRecordImpl<MangaRecord> implements Record4<Long, BigDecimal, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.manga.manga_id</code>.
     */
    public void setMangaId(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.manga.manga_id</code>.
     */
    @Nullable
    public Long getMangaId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.manga.middle_review</code>.
     */
    public void setMiddleReview(@Nullable BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.manga.middle_review</code>.
     */
    @Nullable
    public BigDecimal getMiddleReview() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.manga.author_id</code>.
     */
    public void setAuthorId(@Nullable Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.manga.author_id</code>.
     */
    @Nullable
    public Long getAuthorId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.manga.translator_id</code>.
     */
    public void setTranslatorId(@Nullable Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.manga.translator_id</code>.
     */
    @Nullable
    public Long getTranslatorId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row4<Long, BigDecimal, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row4<Long, BigDecimal, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Manga.MANGA.MANGA_ID;
    }

    @Override
    @NotNull
    public Field<BigDecimal> field2() {
        return Manga.MANGA.MIDDLE_REVIEW;
    }

    @Override
    @NotNull
    public Field<Long> field3() {
        return Manga.MANGA.AUTHOR_ID;
    }

    @Override
    @NotNull
    public Field<Long> field4() {
        return Manga.MANGA.TRANSLATOR_ID;
    }

    @Override
    @Nullable
    public Long component1() {
        return getMangaId();
    }

    @Override
    @Nullable
    public BigDecimal component2() {
        return getMiddleReview();
    }

    @Override
    @Nullable
    public Long component3() {
        return getAuthorId();
    }

    @Override
    @Nullable
    public Long component4() {
        return getTranslatorId();
    }

    @Override
    @Nullable
    public Long value1() {
        return getMangaId();
    }

    @Override
    @Nullable
    public BigDecimal value2() {
        return getMiddleReview();
    }

    @Override
    @Nullable
    public Long value3() {
        return getAuthorId();
    }

    @Override
    @Nullable
    public Long value4() {
        return getTranslatorId();
    }

    @Override
    @NotNull
    public MangaRecord value1(@Nullable Long value) {
        setMangaId(value);
        return this;
    }

    @Override
    @NotNull
    public MangaRecord value2(@Nullable BigDecimal value) {
        setMiddleReview(value);
        return this;
    }

    @Override
    @NotNull
    public MangaRecord value3(@Nullable Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    @NotNull
    public MangaRecord value4(@Nullable Long value) {
        setTranslatorId(value);
        return this;
    }

    @Override
    @NotNull
    public MangaRecord values(@Nullable Long value1, @Nullable BigDecimal value2, @Nullable Long value3, @Nullable Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MangaRecord
     */
    public MangaRecord() {
        super(Manga.MANGA);
    }

    /**
     * Create a detached, initialised MangaRecord
     */
    @ConstructorProperties({ "mangaId", "middleReview", "authorId", "translatorId" })
    public MangaRecord(@Nullable Long mangaId, @Nullable BigDecimal middleReview, @Nullable Long authorId, @Nullable Long translatorId) {
        super(Manga.MANGA);

        setMangaId(mangaId);
        setMiddleReview(middleReview);
        setAuthorId(authorId);
        setTranslatorId(translatorId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MangaRecord
     */
    public MangaRecord(Repositories.jooqGenEntities.tables.pojos.Manga value) {
        super(Manga.MANGA);

        if (value != null) {
            setMangaId(value.getMangaId());
            setMiddleReview(value.getMiddleReview());
            setAuthorId(value.getAuthorId());
            setTranslatorId(value.getTranslatorId());
            resetChangedOnNotNull();
        }
    }
}
