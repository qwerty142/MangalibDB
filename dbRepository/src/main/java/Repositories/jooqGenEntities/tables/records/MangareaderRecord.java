/*
 * This file is generated by jOOQ.
 */
package Repositories.jooqGenEntities.tables.records;


import Repositories.jooqGenEntities.tables.Mangareader;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MangareaderRecord extends UpdatableRecordImpl<MangareaderRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.mangareader.user_id</code>.
     */
    public void setUserId(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mangareader.user_id</code>.
     */
    @Nullable
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.mangareader.password</code>.
     */
    public void setPassword(@Nullable String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mangareader.password</code>.
     */
    @Size(max = 255)
    @Nullable
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.mangareader.email</code>.
     */
    public void setEmail(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.mangareader.email</code>.
     */
    @Size(max = 255)
    @Nullable
    public String getEmail() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Mangareader.MANGAREADER.USER_ID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return Mangareader.MANGAREADER.PASSWORD;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return Mangareader.MANGAREADER.EMAIL;
    }

    @Override
    @Nullable
    public Long component1() {
        return getUserId();
    }

    @Override
    @Nullable
    public String component2() {
        return getPassword();
    }

    @Override
    @Nullable
    public String component3() {
        return getEmail();
    }

    @Override
    @Nullable
    public Long value1() {
        return getUserId();
    }

    @Override
    @Nullable
    public String value2() {
        return getPassword();
    }

    @Override
    @Nullable
    public String value3() {
        return getEmail();
    }

    @Override
    @NotNull
    public MangareaderRecord value1(@Nullable Long value) {
        setUserId(value);
        return this;
    }

    @Override
    @NotNull
    public MangareaderRecord value2(@Nullable String value) {
        setPassword(value);
        return this;
    }

    @Override
    @NotNull
    public MangareaderRecord value3(@Nullable String value) {
        setEmail(value);
        return this;
    }

    @Override
    @NotNull
    public MangareaderRecord values(@Nullable Long value1, @Nullable String value2, @Nullable String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MangareaderRecord
     */
    public MangareaderRecord() {
        super(Mangareader.MANGAREADER);
    }

    /**
     * Create a detached, initialised MangareaderRecord
     */
    @ConstructorProperties({ "userId", "password", "email" })
    public MangareaderRecord(@Nullable Long userId, @Nullable String password, @Nullable String email) {
        super(Mangareader.MANGAREADER);

        setUserId(userId);
        setPassword(password);
        setEmail(email);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MangareaderRecord
     */
    public MangareaderRecord(Repositories.jooqGenEntities.tables.pojos.Mangareader value) {
        super(Mangareader.MANGAREADER);

        if (value != null) {
            setUserId(value.getUserId());
            setPassword(value.getPassword());
            setEmail(value.getEmail());
            resetChangedOnNotNull();
        }
    }
}
