/*
 * This file is generated by jOOQ.
 */
package Repositories.jooqGenEntities.tables.records;


import Repositories.jooqGenEntities.tables.Page;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PageRecord extends UpdatableRecordImpl<PageRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.page.chapter_id</code>.
     */
    public void setChapterId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.page.chapter_id</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getChapterId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.page.page_place</code>.
     */
    public void setPagePlace(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.page.page_place</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getPagePlace() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.page.init_picture_link</code>.
     */
    public void setInitPictureLink(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.page.init_picture_link</code>.
     */
    @Size(max = 255)
    @Nullable
    public String getInitPictureLink() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Page.PAGE.CHAPTER_ID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return Page.PAGE.PAGE_PLACE;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return Page.PAGE.INIT_PICTURE_LINK;
    }

    @Override
    @NotNull
    public Long component1() {
        return getChapterId();
    }

    @Override
    @NotNull
    public Long component2() {
        return getPagePlace();
    }

    @Override
    @Nullable
    public String component3() {
        return getInitPictureLink();
    }

    @Override
    @NotNull
    public Long value1() {
        return getChapterId();
    }

    @Override
    @NotNull
    public Long value2() {
        return getPagePlace();
    }

    @Override
    @Nullable
    public String value3() {
        return getInitPictureLink();
    }

    @Override
    @NotNull
    public PageRecord value1(@NotNull Long value) {
        setChapterId(value);
        return this;
    }

    @Override
    @NotNull
    public PageRecord value2(@NotNull Long value) {
        setPagePlace(value);
        return this;
    }

    @Override
    @NotNull
    public PageRecord value3(@Nullable String value) {
        setInitPictureLink(value);
        return this;
    }

    @Override
    @NotNull
    public PageRecord values(@NotNull Long value1, @NotNull Long value2, @Nullable String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PageRecord
     */
    public PageRecord() {
        super(Page.PAGE);
    }

    /**
     * Create a detached, initialised PageRecord
     */
    @ConstructorProperties({ "chapterId", "pagePlace", "initPictureLink" })
    public PageRecord(@NotNull Long chapterId, @NotNull Long pagePlace, @Nullable String initPictureLink) {
        super(Page.PAGE);

        setChapterId(chapterId);
        setPagePlace(pagePlace);
        setInitPictureLink(initPictureLink);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PageRecord
     */
    public PageRecord(Repositories.jooqGenEntities.tables.pojos.Page value) {
        super(Page.PAGE);

        if (value != null) {
            setChapterId(value.getChapterId());
            setPagePlace(value.getPagePlace());
            setInitPictureLink(value.getInitPictureLink());
            resetChangedOnNotNull();
        }
    }
}
